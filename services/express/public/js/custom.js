let cpu=[],memory=[];function graphDump(e){cpu=[],memory=[],app.dspCpu=[],app.dspMemory=[];let t=JSON.parse(e);Object.keys(t).forEach(function(e,p){let o,a;t[e].averageCpu?(o=t[e].averageCpu,a=t[e].averageMemory,cpu.push(t[e].timestamp+","+o+","),memory.push(t[e].timestamp+","+a+",")):(o=t[e].cpu,a=t[e].memory,cpu.push(t[e].timestamp+","+o+","),memory.push(t[e].timestamp+","+a+",")),p===Object.keys(t).length-1&&(app.dspCpu=cpu,app.dspMemory=memory,loadDspGraphs())})}function bytesToSize(e){if(0==e)return"0 Byte";var t=parseInt(Math.floor(Math.log(e)/Math.log(1024)));return Math.round(e/Math.pow(1024,t),2)+["Bytes","KB","MB","GB","TB"][t]}function loadDspGraphs(){$(".plot-container.plotly")[0]&&Plotly.purge($("#dspStats")[0]);var e,t,p,o=[(e=app.dspCpu,t=[],p=[],e.forEach(function(e,o){let a=e.split(","),s=a[0],r=a[1];s&&r&&(t.push(new Date(Number(s))),p.push(r))}),[{type:"scatter",x:t,y:p}])[0],function(e){var t=[],p=[];return e.forEach(function(e,o){let a=e.split(","),s=a[0],r=a[1];s&&r&&(t.push(new Date(Number(s))),p.push(bytesToSize(r)))}),[{type:"scatter",yaxis:"y2",x:t,y:p}]}(app.dspMemory)[0]],a={title:"DPS Executables CPU and Memory Usage.",xaxis:{rangeselector:{buttons:[{step:"minute",stepmode:"todate",count:1,label:"1m"},{step:"minute",stepmode:"todate",count:15,label:"15m"},{step:"minute",stepmode:"todate",count:30,label:"30m"},{step:"hour",stepmode:"todate",count:1,label:"1h"},{step:"hour",stepmode:"todate",count:12,label:"12h"},{step:"day",stepmode:"todate",count:1,label:"1d"},{step:"week",stepmode:"todate",count:1,label:"1w"},{step:"week",stepmode:"todate",count:4,label:"4w"},{step:"all"}]},rangeslider:{}},yaxis:{showgrid:!1,zeroline:!1,title:"CPU Usage"},yaxis2:{autorange:"reversed",showgrid:!1,title:"Memory Usage",titlefont:{color:"rgb(148, 103, 189)"},line:{color:"rgb(55, 128, 191)"},overlaying:"y",side:"right"}};Plotly.plot($("#dspStats")[0],o,a,{responsive:!0})}